"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_tsparticles_shape-image_browser_index_js"],{

/***/ "(app-pages-browser)/./node_modules/@tsparticles/shape-image/browser/Utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tsparticles/shape-image/browser/Utils.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   downloadSvgImage: function() { return /* binding */ downloadSvgImage; },\n/* harmony export */   loadImage: function() { return /* binding */ loadImage; },\n/* harmony export */   replaceImageColor: function() { return /* binding */ replaceImageColor; }\n/* harmony export */ });\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"(app-pages-browser)/./node_modules/@tsparticles/engine/browser/index.js\");\n\nconst stringStart = 0, defaultOpacity = 1;\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getStyleFromHsl)(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, ()=>colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return \"\".concat(svgData.substring(stringStart, preFillIndex), ' fill=\"').concat(colorStyle, '\"').concat(svgData.substring(preFillIndex));\n}\nasync function loadImage(image) {\n    return new Promise((resolve)=>{\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", ()=>{\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", ()=>{\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getLogger)().error(\"\".concat(_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.errorPrefix, \" loading image: \").concat(image.source));\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nasync function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getLogger)().error(\"\".concat(_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.errorPrefix, \" Image not found\"));\n        image.error = true;\n    } else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nfunction replaceImageColor(image, imageData, color, particle) {\n    var _particle_opacity;\n    var _particle_opacity_value;\n    const svgColoredData = replaceColorSvg(image, color, (_particle_opacity_value = (_particle_opacity = particle.opacity) === null || _particle_opacity === void 0 ? void 0 : _particle_opacity.value) !== null && _particle_opacity_value !== void 0 ? _particle_opacity_value : defaultOpacity), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor,\n        source: imageData.src\n    };\n    return new Promise((resolve)=>{\n        const svg = new Blob([\n            svgColoredData\n        ], {\n            type: \"image/svg+xml\"\n        }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", ()=>{\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        const errorHandler = async ()=>{\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        };\n        img.addEventListener(\"error\", ()=>void errorHandler());\n        img.src = url;\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tsparticles/shape-image/browser/Utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tsparticles/shape-image/browser/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tsparticles/shape-image/browser/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadImageShape: function() { return /* binding */ loadImageShape; }\n/* harmony export */ });\n/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Utils.js */ \"(app-pages-browser)/./node_modules/@tsparticles/shape-image/browser/Utils.js\");\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tsparticles/engine */ \"(app-pages-browser)/./node_modules/@tsparticles/engine/browser/index.js\");\n\n\nconst extLength = 3;\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data)=>{\n        if (!data.name && !data.src) {\n            throw new Error(\"\".concat(_tsparticles_engine__WEBPACK_IMPORTED_MODULE_1__.errorPrefix, \" no image source provided\"));\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t)=>t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            var _data_gif, _data_name;\n            const image = {\n                gif: (_data_gif = data.gif) !== null && _data_gif !== void 0 ? _data_gif : false,\n                name: (_data_name = data.name) !== null && _data_name !== void 0 ? _data_name : data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - extLength),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined\n            };\n            engine.images.push(image);\n            let imageFunc;\n            if (data.gif) {\n                const { loadGifImage } = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_tsparticles_shape-image_browser_GifUtils_Utils_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./GifUtils/Utils.js */ \"(app-pages-browser)/./node_modules/@tsparticles/shape-image/browser/GifUtils/Utils.js\"));\n                imageFunc = loadGifImage;\n            } else {\n                imageFunc = data.replaceColor ? _Utils_js__WEBPACK_IMPORTED_MODULE_0__.downloadSvgImage : _Utils_js__WEBPACK_IMPORTED_MODULE_0__.loadImage;\n            }\n            await imageFunc(image);\n        } catch (e) {\n            var _data_name1;\n            throw new Error(\"\".concat(_tsparticles_engine__WEBPACK_IMPORTED_MODULE_1__.errorPrefix, \" \").concat((_data_name1 = data.name) !== null && _data_name1 !== void 0 ? _data_name1 : data.src, \" not found\"));\n        }\n    };\n}\nasync function loadImageShape(engine) {\n    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n    addLoadImageToEngine(engine);\n    const { ImagePreloaderPlugin } = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_tsparticles_shape-image_browser_ImagePreloader_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./ImagePreloader.js */ \"(app-pages-browser)/./node_modules/@tsparticles/shape-image/browser/ImagePreloader.js\")), { ImageDrawer } = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_tsparticles_shape-image_browser_ImageDrawer_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./ImageDrawer.js */ \"(app-pages-browser)/./node_modules/@tsparticles/shape-image/browser/ImageDrawer.js\"));\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape([\n        \"image\",\n        \"images\"\n    ], new ImageDrawer(engine), refresh);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvc2hhcGUtaW1hZ2UvYnJvd3Nlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBeUQ7QUFDUDtBQUNsRCxNQUFNRyxZQUFZO0FBQ2xCLFNBQVNDLHFCQUFxQkMsTUFBTTtJQUNoQyxJQUFJQSxPQUFPSixTQUFTLEVBQUU7UUFDbEI7SUFDSjtJQUNBSSxPQUFPSixTQUFTLEdBQUcsT0FBT0s7UUFDdEIsSUFBSSxDQUFDQSxLQUFLQyxJQUFJLElBQUksQ0FBQ0QsS0FBS0UsR0FBRyxFQUFFO1lBQ3pCLE1BQU0sSUFBSUMsTUFBTSxHQUFlLE9BQVpQLDREQUFXQSxFQUFDO1FBQ25DO1FBQ0EsSUFBSSxDQUFDRyxPQUFPSyxNQUFNLEVBQUU7WUFDaEJMLE9BQU9LLE1BQU0sR0FBRyxFQUFFO1FBQ3RCO1FBQ0EsSUFBSUwsT0FBT0ssTUFBTSxDQUFDQyxJQUFJLENBQUMsQ0FBQ0MsSUFBTUEsRUFBRUwsSUFBSSxLQUFLRCxLQUFLQyxJQUFJLElBQUlLLEVBQUVDLE1BQU0sS0FBS1AsS0FBS0UsR0FBRyxHQUFHO1lBQzFFO1FBQ0o7UUFDQSxJQUFJO2dCQUVTRixXQUNDQTtZQUZWLE1BQU1RLFFBQVE7Z0JBQ1ZDLEtBQUtULENBQUFBLFlBQUFBLEtBQUtTLEdBQUcsY0FBUlQsdUJBQUFBLFlBQVk7Z0JBQ2pCQyxNQUFNRCxDQUFBQSxhQUFBQSxLQUFLQyxJQUFJLGNBQVRELHdCQUFBQSxhQUFhQSxLQUFLRSxHQUFHO2dCQUMzQkssUUFBUVAsS0FBS0UsR0FBRztnQkFDaEJRLE1BQU1WLEtBQUtFLEdBQUcsQ0FBQ1MsU0FBUyxDQUFDWCxLQUFLRSxHQUFHLENBQUNVLE1BQU0sR0FBR2Y7Z0JBQzNDZ0IsT0FBTztnQkFDUEMsU0FBUztnQkFDVEMsY0FBY2YsS0FBS2UsWUFBWTtnQkFDL0JDLE9BQU9oQixLQUFLaUIsS0FBSyxJQUFJakIsS0FBS2tCLE1BQU0sR0FBR2xCLEtBQUtpQixLQUFLLEdBQUdqQixLQUFLa0IsTUFBTSxHQUFHQztZQUNsRTtZQUNBcEIsT0FBT0ssTUFBTSxDQUFDZ0IsSUFBSSxDQUFDWjtZQUNuQixJQUFJYTtZQUNKLElBQUlyQixLQUFLUyxHQUFHLEVBQUU7Z0JBQ1YsTUFBTSxFQUFFYSxZQUFZLEVBQUUsR0FBRyxNQUFNLGtTQUE2QjtnQkFDNURELFlBQVlDO1lBQ2hCLE9BQ0s7Z0JBQ0RELFlBQVlyQixLQUFLZSxZQUFZLEdBQUdyQix1REFBZ0JBLEdBQUdDLGdEQUFTQTtZQUNoRTtZQUNBLE1BQU0wQixVQUFVYjtRQUNwQixFQUNBLFVBQU07Z0JBQ2dDUjtZQUFsQyxNQUFNLElBQUlHLE1BQU0sR0FBa0JILE9BQWZKLDREQUFXQSxFQUFDLEtBQXlCLE9BQXRCSSxDQUFBQSxjQUFBQSxLQUFLQyxJQUFJLGNBQVRELHlCQUFBQSxjQUFhQSxLQUFLRSxHQUFHLEVBQUM7UUFDNUQ7SUFDSjtBQUNKO0FBQ08sZUFBZXFCLGVBQWV4QixNQUFNO1FBQUV5QixVQUFBQSxpRUFBVTtJQUNuRDFCLHFCQUFxQkM7SUFDckIsTUFBTSxFQUFFMEIsb0JBQW9CLEVBQUUsR0FBRyxNQUFNLGtTQUE2QixFQUFFLEVBQUVDLFdBQVcsRUFBRSxHQUFHLE1BQU0seVJBQTBCO0lBQ3hILE1BQU1DLFlBQVksSUFBSUYscUJBQXFCMUI7SUFDM0MsTUFBTUEsT0FBTzZCLFNBQVMsQ0FBQ0QsV0FBV0g7SUFDbEMsTUFBTXpCLE9BQU84QixRQUFRLENBQUM7UUFBQztRQUFTO0tBQVMsRUFBRSxJQUFJSCxZQUFZM0IsU0FBU3lCO0FBQ3hFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvc2hhcGUtaW1hZ2UvYnJvd3Nlci9pbmRleC5qcz9iOGE1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRvd25sb2FkU3ZnSW1hZ2UsIGxvYWRJbWFnZSB9IGZyb20gXCIuL1V0aWxzLmpzXCI7XG5pbXBvcnQgeyBlcnJvclByZWZpeCB9IGZyb20gXCJAdHNwYXJ0aWNsZXMvZW5naW5lXCI7XG5jb25zdCBleHRMZW5ndGggPSAzO1xuZnVuY3Rpb24gYWRkTG9hZEltYWdlVG9FbmdpbmUoZW5naW5lKSB7XG4gICAgaWYgKGVuZ2luZS5sb2FkSW1hZ2UpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBlbmdpbmUubG9hZEltYWdlID0gYXN5bmMgKGRhdGEpID0+IHtcbiAgICAgICAgaWYgKCFkYXRhLm5hbWUgJiYgIWRhdGEuc3JjKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZXJyb3JQcmVmaXh9IG5vIGltYWdlIHNvdXJjZSBwcm92aWRlZGApO1xuICAgICAgICB9XG4gICAgICAgIGlmICghZW5naW5lLmltYWdlcykge1xuICAgICAgICAgICAgZW5naW5lLmltYWdlcyA9IFtdO1xuICAgICAgICB9XG4gICAgICAgIGlmIChlbmdpbmUuaW1hZ2VzLmZpbmQoKHQpID0+IHQubmFtZSA9PT0gZGF0YS5uYW1lIHx8IHQuc291cmNlID09PSBkYXRhLnNyYykpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgaW1hZ2UgPSB7XG4gICAgICAgICAgICAgICAgZ2lmOiBkYXRhLmdpZiA/PyBmYWxzZSxcbiAgICAgICAgICAgICAgICBuYW1lOiBkYXRhLm5hbWUgPz8gZGF0YS5zcmMsXG4gICAgICAgICAgICAgICAgc291cmNlOiBkYXRhLnNyYyxcbiAgICAgICAgICAgICAgICB0eXBlOiBkYXRhLnNyYy5zdWJzdHJpbmcoZGF0YS5zcmMubGVuZ3RoIC0gZXh0TGVuZ3RoKSxcbiAgICAgICAgICAgICAgICBlcnJvcjogZmFsc2UsXG4gICAgICAgICAgICAgICAgbG9hZGluZzogdHJ1ZSxcbiAgICAgICAgICAgICAgICByZXBsYWNlQ29sb3I6IGRhdGEucmVwbGFjZUNvbG9yLFxuICAgICAgICAgICAgICAgIHJhdGlvOiBkYXRhLndpZHRoICYmIGRhdGEuaGVpZ2h0ID8gZGF0YS53aWR0aCAvIGRhdGEuaGVpZ2h0IDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGVuZ2luZS5pbWFnZXMucHVzaChpbWFnZSk7XG4gICAgICAgICAgICBsZXQgaW1hZ2VGdW5jO1xuICAgICAgICAgICAgaWYgKGRhdGEuZ2lmKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyBsb2FkR2lmSW1hZ2UgfSA9IGF3YWl0IGltcG9ydChcIi4vR2lmVXRpbHMvVXRpbHMuanNcIik7XG4gICAgICAgICAgICAgICAgaW1hZ2VGdW5jID0gbG9hZEdpZkltYWdlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgaW1hZ2VGdW5jID0gZGF0YS5yZXBsYWNlQ29sb3IgPyBkb3dubG9hZFN2Z0ltYWdlIDogbG9hZEltYWdlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXdhaXQgaW1hZ2VGdW5jKGltYWdlKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZXJyb3JQcmVmaXh9ICR7ZGF0YS5uYW1lID8/IGRhdGEuc3JjfSBub3QgZm91bmRgKTtcbiAgICAgICAgfVxuICAgIH07XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbG9hZEltYWdlU2hhcGUoZW5naW5lLCByZWZyZXNoID0gdHJ1ZSkge1xuICAgIGFkZExvYWRJbWFnZVRvRW5naW5lKGVuZ2luZSk7XG4gICAgY29uc3QgeyBJbWFnZVByZWxvYWRlclBsdWdpbiB9ID0gYXdhaXQgaW1wb3J0KFwiLi9JbWFnZVByZWxvYWRlci5qc1wiKSwgeyBJbWFnZURyYXdlciB9ID0gYXdhaXQgaW1wb3J0KFwiLi9JbWFnZURyYXdlci5qc1wiKTtcbiAgICBjb25zdCBwcmVsb2FkZXIgPSBuZXcgSW1hZ2VQcmVsb2FkZXJQbHVnaW4oZW5naW5lKTtcbiAgICBhd2FpdCBlbmdpbmUuYWRkUGx1Z2luKHByZWxvYWRlciwgcmVmcmVzaCk7XG4gICAgYXdhaXQgZW5naW5lLmFkZFNoYXBlKFtcImltYWdlXCIsIFwiaW1hZ2VzXCJdLCBuZXcgSW1hZ2VEcmF3ZXIoZW5naW5lKSwgcmVmcmVzaCk7XG59XG4iXSwibmFtZXMiOlsiZG93bmxvYWRTdmdJbWFnZSIsImxvYWRJbWFnZSIsImVycm9yUHJlZml4IiwiZXh0TGVuZ3RoIiwiYWRkTG9hZEltYWdlVG9FbmdpbmUiLCJlbmdpbmUiLCJkYXRhIiwibmFtZSIsInNyYyIsIkVycm9yIiwiaW1hZ2VzIiwiZmluZCIsInQiLCJzb3VyY2UiLCJpbWFnZSIsImdpZiIsInR5cGUiLCJzdWJzdHJpbmciLCJsZW5ndGgiLCJlcnJvciIsImxvYWRpbmciLCJyZXBsYWNlQ29sb3IiLCJyYXRpbyIsIndpZHRoIiwiaGVpZ2h0IiwidW5kZWZpbmVkIiwicHVzaCIsImltYWdlRnVuYyIsImxvYWRHaWZJbWFnZSIsImxvYWRJbWFnZVNoYXBlIiwicmVmcmVzaCIsIkltYWdlUHJlbG9hZGVyUGx1Z2luIiwiSW1hZ2VEcmF3ZXIiLCJwcmVsb2FkZXIiLCJhZGRQbHVnaW4iLCJhZGRTaGFwZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tsparticles/shape-image/browser/index.js\n"));

/***/ })

}]);