"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_tsparticles_updater-color_browser_index_js"],{

/***/ "(app-pages-browser)/./node_modules/@tsparticles/updater-color/browser/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tsparticles/updater-color/browser/index.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadColorUpdater: function() { return /* binding */ loadColorUpdater; }\n/* harmony export */ });\nasync function loadColorUpdater(engine) {\n    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n    await engine.addParticleUpdater(\"color\", async (container)=>{\n        const { ColorUpdater } = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_tsparticles_updater-color_browser_ColorUpdater_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./ColorUpdater.js */ \"(app-pages-browser)/./node_modules/@tsparticles/updater-color/browser/ColorUpdater.js\"));\n        return new ColorUpdater(container);\n    }, refresh);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvdXBkYXRlci1jb2xvci9icm93c2VyL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxlQUFlQSxpQkFBaUJDLE1BQU07UUFBRUMsVUFBQUEsaUVBQVU7SUFDckQsTUFBTUQsT0FBT0Usa0JBQWtCLENBQUMsU0FBUyxPQUFPQztRQUM1QyxNQUFNLEVBQUVDLFlBQVksRUFBRSxHQUFHLE1BQU0sZ1NBQTJCO1FBQzFELE9BQU8sSUFBSUEsYUFBYUQ7SUFDNUIsR0FBR0Y7QUFDUCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRzcGFydGljbGVzL3VwZGF0ZXItY29sb3IvYnJvd3Nlci9pbmRleC5qcz83ODZiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBhc3luYyBmdW5jdGlvbiBsb2FkQ29sb3JVcGRhdGVyKGVuZ2luZSwgcmVmcmVzaCA9IHRydWUpIHtcbiAgICBhd2FpdCBlbmdpbmUuYWRkUGFydGljbGVVcGRhdGVyKFwiY29sb3JcIiwgYXN5bmMgKGNvbnRhaW5lcikgPT4ge1xuICAgICAgICBjb25zdCB7IENvbG9yVXBkYXRlciB9ID0gYXdhaXQgaW1wb3J0KFwiLi9Db2xvclVwZGF0ZXIuanNcIik7XG4gICAgICAgIHJldHVybiBuZXcgQ29sb3JVcGRhdGVyKGNvbnRhaW5lcik7XG4gICAgfSwgcmVmcmVzaCk7XG59XG4iXSwibmFtZXMiOlsibG9hZENvbG9yVXBkYXRlciIsImVuZ2luZSIsInJlZnJlc2giLCJhZGRQYXJ0aWNsZVVwZGF0ZXIiLCJjb250YWluZXIiLCJDb2xvclVwZGF0ZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tsparticles/updater-color/browser/index.js\n"));

/***/ })

}]);