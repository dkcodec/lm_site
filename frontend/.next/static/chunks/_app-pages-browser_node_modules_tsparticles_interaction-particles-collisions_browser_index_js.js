"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_tsparticles_interaction-particles-collisions_browser_index_js"],{

/***/ "(app-pages-browser)/./node_modules/@tsparticles/interaction-particles-collisions/browser/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@tsparticles/interaction-particles-collisions/browser/index.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadParticlesCollisionsInteraction: function() { return /* binding */ loadParticlesCollisionsInteraction; }\n/* harmony export */ });\nasync function loadParticlesCollisionsInteraction(engine) {\n    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n    await engine.addInteractor(\"particlesCollisions\", async (container)=>{\n        const { Collider } = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_tsparticles_interaction-particles-collisions_browser_Collider_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./Collider.js */ \"(app-pages-browser)/./node_modules/@tsparticles/interaction-particles-collisions/browser/Collider.js\"));\n        return new Collider(container);\n    }, refresh);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvaW50ZXJhY3Rpb24tcGFydGljbGVzLWNvbGxpc2lvbnMvYnJvd3Nlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sZUFBZUEsbUNBQW1DQyxNQUFNO1FBQUVDLFVBQUFBLGlFQUFVO0lBQ3ZFLE1BQU1ELE9BQU9FLGFBQWEsQ0FBQyx1QkFBdUIsT0FBT0M7UUFDckQsTUFBTSxFQUFFQyxRQUFRLEVBQUUsR0FBRyxNQUFNLDBUQUF1QjtRQUNsRCxPQUFPLElBQUlBLFNBQVNEO0lBQ3hCLEdBQUdGO0FBQ1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0c3BhcnRpY2xlcy9pbnRlcmFjdGlvbi1wYXJ0aWNsZXMtY29sbGlzaW9ucy9icm93c2VyL2luZGV4LmpzP2RmOGIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGxvYWRQYXJ0aWNsZXNDb2xsaXNpb25zSW50ZXJhY3Rpb24oZW5naW5lLCByZWZyZXNoID0gdHJ1ZSkge1xuICAgIGF3YWl0IGVuZ2luZS5hZGRJbnRlcmFjdG9yKFwicGFydGljbGVzQ29sbGlzaW9uc1wiLCBhc3luYyAoY29udGFpbmVyKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgQ29sbGlkZXIgfSA9IGF3YWl0IGltcG9ydChcIi4vQ29sbGlkZXIuanNcIik7XG4gICAgICAgIHJldHVybiBuZXcgQ29sbGlkZXIoY29udGFpbmVyKTtcbiAgICB9LCByZWZyZXNoKTtcbn1cbiJdLCJuYW1lcyI6WyJsb2FkUGFydGljbGVzQ29sbGlzaW9uc0ludGVyYWN0aW9uIiwiZW5naW5lIiwicmVmcmVzaCIsImFkZEludGVyYWN0b3IiLCJjb250YWluZXIiLCJDb2xsaWRlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tsparticles/interaction-particles-collisions/browser/index.js\n"));

/***/ })

}]);