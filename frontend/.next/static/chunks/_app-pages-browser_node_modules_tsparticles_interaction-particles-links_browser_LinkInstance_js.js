"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_tsparticles_interaction-particles-links_browser_LinkInstance_js"],{

/***/ "(app-pages-browser)/./node_modules/@tsparticles/interaction-particles-links/browser/LinkInstance.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@tsparticles/interaction-particles-links/browser/LinkInstance.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LinkInstance: function() { return /* binding */ LinkInstance; }\n/* harmony export */ });\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"(app-pages-browser)/./node_modules/@tsparticles/engine/browser/index.js\");\n/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Utils.js */ \"(app-pages-browser)/./node_modules/@tsparticles/interaction-particles-links/browser/Utils.js\");\n\n\nconst minOpacity = 0, minWidth = 0, minDistance = 0, half = 0.5, maxFrequency = 1;\nclass LinkInstance {\n    async drawParticle(context, particle) {\n        const { links, options } = particle;\n        if (!(links === null || links === void 0 ? void 0 : links.length)) {\n            return;\n        }\n        const p1Links = links.filter((l)=>options.links && (options.links.frequency >= maxFrequency || this._getLinkFrequency(particle, l.destination) <= options.links.frequency));\n        for (const link of p1Links){\n            this._drawTriangles(options, particle, link, p1Links);\n            var _particle_retina_linksWidth;\n            if (link.opacity > minOpacity && ((_particle_retina_linksWidth = particle.retina.linksWidth) !== null && _particle_retina_linksWidth !== void 0 ? _particle_retina_linksWidth : minWidth) > minWidth) {\n                this._drawLinkLine(particle, link);\n            }\n        }\n        await Promise.resolve();\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n        await Promise.resolve();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;\n        retina.linksDistance = distance * ratio;\n        retina.linksWidth = width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n    constructor(container){\n        this.container = container;\n        this._drawLinkLine = (p1, link)=>{\n            const p1LinksOptions = p1.options.links;\n            if (!(p1LinksOptions === null || p1LinksOptions === void 0 ? void 0 : p1LinksOptions.enable)) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            let opacity = link.opacity;\n            container.canvas.draw((ctx)=>{\n                var _p1_options_twinkle;\n                let colorLine;\n                const twinkle = (_p1_options_twinkle = p1.options.twinkle) === null || _p1_options_twinkle === void 0 ? void 0 : _p1_options_twinkle.lines;\n                if (twinkle === null || twinkle === void 0 ? void 0 : twinkle.enable) {\n                    const twinkleFreq = twinkle.frequency, twinkleRgb = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.rangeColorToRgb)(twinkle.color), twinkling = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRandom)() < twinkleFreq;\n                    if (twinkling && twinkleRgb) {\n                        colorLine = twinkleRgb;\n                        opacity = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRangeValue)(twinkle.opacity);\n                    }\n                }\n                if (!colorLine) {\n                    const linkColor = p1LinksOptions.id !== undefined ? container.particles.linksColors.get(p1LinksOptions.id) : container.particles.linksColor;\n                    colorLine = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getLinkColor)(p1, p2, linkColor);\n                }\n                if (!colorLine) {\n                    return;\n                }\n                var _p1_retina_linksWidth, _p1_retina_linksDistance;\n                const width = (_p1_retina_linksWidth = p1.retina.linksWidth) !== null && _p1_retina_linksWidth !== void 0 ? _p1_retina_linksWidth : minWidth, maxDistance = (_p1_retina_linksDistance = p1.retina.linksDistance) !== null && _p1_retina_linksDistance !== void 0 ? _p1_retina_linksDistance : minDistance, { backgroundMask } = options;\n                (0,_Utils_js__WEBPACK_IMPORTED_MODULE_1__.drawLinkLine)({\n                    context: ctx,\n                    width,\n                    begin: pos1,\n                    end: pos2,\n                    maxDistance,\n                    canvasSize: container.canvas.size,\n                    links: p1LinksOptions,\n                    backgroundMask: backgroundMask,\n                    colorLine,\n                    opacity\n                });\n            });\n        };\n        this._drawLinkTriangle = (p1, link1, link2)=>{\n            const linksOptions = p1.options.links;\n            if (!(linksOptions === null || linksOptions === void 0 ? void 0 : linksOptions.enable)) {\n                return;\n            }\n            const triangleOptions = linksOptions.triangles;\n            if (!triangleOptions.enable) {\n                return;\n            }\n            var _triangleOptions_opacity;\n            const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = (_triangleOptions_opacity = triangleOptions.opacity) !== null && _triangleOptions_opacity !== void 0 ? _triangleOptions_opacity : (link1.opacity + link2.opacity) * half;\n            if (opacityTriangle <= minOpacity) {\n                return;\n            }\n            container.canvas.draw((ctx)=>{\n                var _p1_retina_linksDistance;\n                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = (_p1_retina_linksDistance = p1.retina.linksDistance) !== null && _p1_retina_linksDistance !== void 0 ? _p1_retina_linksDistance : minDistance;\n                if ((0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getDistance)(pos1, pos2) > linksDistance || (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getDistance)(pos3, pos2) > linksDistance || (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getDistance)(pos3, pos1) > linksDistance) {\n                    return;\n                }\n                let colorTriangle = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.rangeColorToRgb)(triangleOptions.color);\n                if (!colorTriangle) {\n                    const linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n                    colorTriangle = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getLinkColor)(p1, p2, linkColor);\n                }\n                if (!colorTriangle) {\n                    return;\n                }\n                (0,_Utils_js__WEBPACK_IMPORTED_MODULE_1__.drawLinkTriangle)({\n                    context: ctx,\n                    pos1,\n                    pos2,\n                    pos3,\n                    backgroundMask: options.backgroundMask,\n                    colorTriangle,\n                    opacityTriangle\n                });\n            });\n        };\n        this._drawTriangles = (options, p1, link, p1Links)=>{\n            var _options_links, _p2_options_links, _p2_links;\n            const p2 = link.destination;\n            if (!(((_options_links = options.links) === null || _options_links === void 0 ? void 0 : _options_links.triangles.enable) && ((_p2_options_links = p2.options.links) === null || _p2_options_links === void 0 ? void 0 : _p2_options_links.triangles.enable))) {\n                return;\n            }\n            const vertices = (_p2_links = p2.links) === null || _p2_links === void 0 ? void 0 : _p2_links.filter((t)=>{\n                const linkFreq = this._getLinkFrequency(p2, t.destination), minCount = 0;\n                return p2.options.links && linkFreq <= p2.options.links.frequency && p1Links.findIndex((l)=>l.destination === t.destination) >= minCount;\n            });\n            if (!(vertices === null || vertices === void 0 ? void 0 : vertices.length)) {\n                return;\n            }\n            for (const vertex of vertices){\n                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n                if (triangleFreq > options.links.triangles.frequency) {\n                    continue;\n                }\n                this._drawLinkTriangle(p1, link, vertex);\n            }\n        };\n        this._getLinkFrequency = (p1, p2)=>{\n            return (0,_Utils_js__WEBPACK_IMPORTED_MODULE_1__.setLinkFrequency)([\n                p1,\n                p2\n            ], this._freqs.links);\n        };\n        this._getTriangleFrequency = (p1, p2, p3)=>{\n            return (0,_Utils_js__WEBPACK_IMPORTED_MODULE_1__.setLinkFrequency)([\n                p1,\n                p2,\n                p3\n            ], this._freqs.triangles);\n        };\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map()\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tsparticles/interaction-particles-links/browser/LinkInstance.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@tsparticles/interaction-particles-links/browser/Utils.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tsparticles/interaction-particles-links/browser/Utils.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   drawLinkLine: function() { return /* binding */ drawLinkLine; },\n/* harmony export */   drawLinkTriangle: function() { return /* binding */ drawLinkTriangle; },\n/* harmony export */   drawTriangle: function() { return /* binding */ drawTriangle; },\n/* harmony export */   getLinkKey: function() { return /* binding */ getLinkKey; },\n/* harmony export */   setLinkFrequency: function() { return /* binding */ setLinkFrequency; }\n/* harmony export */ });\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"(app-pages-browser)/./node_modules/@tsparticles/engine/browser/index.js\");\n\nfunction drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nfunction drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if ((0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getDistance)(begin, end) <= maxDistance) {\n        (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.drawLine)(context, begin, end);\n        drawn = true;\n    } else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y\n        };\n        const d1 = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getDistances)(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - d1.dy / d1.dx * begin.x;\n            pi1 = {\n                x: 0,\n                y: yi\n            };\n            pi2 = {\n                x: canvasSize.width,\n                y: yi\n            };\n        } else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height\n            };\n            const d2 = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getDistances)(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - d2.dy / d2.dx * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = {\n                    x: xi,\n                    y: 0\n                };\n                pi2 = {\n                    x: xi,\n                    y: canvasSize.height\n                };\n            } else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height\n                };\n                const d3 = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getDistances)(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - d3.dy / d3.dx * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = {\n                        x: xi,\n                        y: yi\n                    };\n                    pi2 = {\n                        x: pi1.x + canvasSize.width,\n                        y: pi1.y + canvasSize.height\n                    };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.drawLine)(context, begin, pi1);\n            (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.drawLine)(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getStyleFromRgb)(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.rangeColorToRgb)(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getStyleFromRgb)(shadowColor);\n        }\n    }\n    context.stroke();\n}\nfunction drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getStyleFromRgb)(colorTriangle, opacityTriangle);\n    context.fill();\n}\nfunction getLinkKey(ids) {\n    ids.sort((a, b)=>a - b);\n    return ids.join(\"_\");\n}\nfunction setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t)=>t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRandom)();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tsparticles/interaction-particles-links/browser/Utils.js\n"));

/***/ })

}]);